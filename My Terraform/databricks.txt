resource "azurerm_databricks_workspace" "myworkspace" {
  name                                  = var.databricks_workspace_name
  resource_group_name                   = var.resource_group_name
  location                              = var.location
  sku                                   = "premium"
  managed_resource_group_name           = "${var.databricks_workspace_name}-managed-rg"
  infrastructure_encryption_enabled     = "false"
  customer_managed_key_enabled          = "false"
  public_network_access_enabled         = "false"
  network_security_group_rules_required = "NoAzureDatabricksRules"
  depends_on                            = [azurerm_resource_group.applicationrg]

  custom_parameters {
    no_public_ip                                         = true
    public_subnet_name                                   = azurerm_subnet.publicSubnet.name
    public_subnet_network_security_group_association_id  = azurerm_subnet_network_security_group_association.pubnsgass.id
    private_subnet_name                                  = azurerm_subnet.privateSubnet.name
    private_subnet_network_security_group_association_id = azurerm_subnet_network_security_group_association.prvnsgass.id
    virtual_network_id                                   = azurerm_virtual_network.applicationvnetwrk.id
    vnet_address_prefix                                  = var.virtualnetwork.address_space
  }
}


#backend private endpoint
resource "azurerm_private_dns_zone" "datarbricksbackend_dnszone" {
  name                = "privatelink.azuredatabricks.net"
  resource_group_name = var.resource_group_name
  
}

resource "azurerm_private_dns_zone_virtual_network_link" "datarbricksbackend_dnszonenlink" {
  name                  = "databricksbackend_dnslink"
  resource_group_name   = var.resource_group_name
  private_dns_zone_name = azurerm_private_dns_zone.datarbricksbackend_dnszone.name
  virtual_network_id    = azurerm_virtual_network.applicationvnetwrk.id
}

resource "azurerm_private_endpoint" "databricks_backend_pep" {
  name                = "databricksbackendpep01"
  resource_group_name = var.resource_group_name
  location            = var.location
  subnet_id           = azurerm_subnet.privatendpoint.id
  depends_on = [ azurerm_private_dns_zone.datarbricksbackend_dnszone ]

  private_service_connection {
    name                           = "datarbricksbepsc01"
    private_connection_resource_id = azurerm_databricks_workspace.myworkspace.id
    is_manual_connection           = false
    subresource_names              = ["databricks_ui_api"]
  }

  private_dns_zone_group {
    name                 = "app-private-dns-zone-dpcp"
    private_dns_zone_ids = [azurerm_private_dns_zone.datarbricksbackend_dnszone.id]
  }
}

#frontend private endpoint
resource "azurerm_private_endpoint" "databricks_frontend_pep" {
  name                = "databricksfrontendpep01"
  resource_group_name = var.resource_group_name
  location            = var.location
  subnet_id           = azurerm_subnet.privatendpoint.id
  

  private_service_connection {
    name                           = "datarbricksfepsc01"
    private_connection_resource_id = azurerm_databricks_workspace.myworkspace.id
    is_manual_connection           = false
    subresource_names              = ["databricks_ui_api"]
  }
}



/*

resource "databricks_user" "techlearningbuddy" {
  user_name = "techlearningbuddy@gmail.com"
  display_name = "Aravind Kumar"
  #depends_on = [ azurerm_resource_group.applicationrg, azurerm_databricks_workspace.myworkspace ]
}

data "databricks_group" "admins" {
  display_name = "admins"
  depends_on = [ azurerm_resource_group.applicationrg, azurerm_databricks_workspace.myworkspace,databricks_user.techlearningbuddy ]
}
resource "databricks_group_member" "localadmingroupmember" {
  group_id = data.databricks_group.admins.id
  member_id = databricks_user.techlearningbuddy.id
  depends_on = [ azurerm_databricks_workspace.myworkspace , data.databricks_group.admins ]
}

data "azurerm_key_vault_secret" "client_secret" {
  name         = "clinet-secret"
  key_vault_id = azurerm_key_vault.mykeyvault.id
}




resource "azurerm_databricks_access_connector" "access_connector" {
  name                = var.access_connector
  resource_group_name = var.resource_group_name
  location            = var.location
  identity {
    type = "SystemAssigned"
  }
  depends_on = [azurerm_resource_group.applicationrg, azurerm_databricks_workspace.myworkspace]
}

resource "azurerm_role_assignment" "example" {
  scope                = azurerm_storage_account.unityadls.id
  role_definition_name = "Storage Blob Data Contributor"
  principal_id         = azurerm_databricks_access_connector.access_connector.identity[0].principal_id
  depends_on           = [azurerm_storage_account.unityadls, azurerm_databricks_access_connector.access_connector]
}



resource "databricks_user_role" "my_user_account_admin" {
  user_id = databricks_user.techlearningbuddy.id
  role    = "account_admin"
}


resource "databricks_metastore" "mymetastore" {
  name = "primary"
  storage_root = format ("abfss://mymetastore@unitycatalognewadlsg2.dfs.core.windows.net/")
  force_destroy = true
  depends_on = [ azurerm_storage_account.unityadls, azurerm_databricks_workspace.myworkspace ]
}

resource "databricks_metastore_data_access" "mymetastoreaccess" {
  metastore_id = databricks_metastore.mymetastore.id
  name         = "the-keys"
  azure_managed_identity {
    access_connector_id = azurerm_databricks_access_connector.access_connector.id
  }

  is_default = true
  depends_on = [ databricks_metastore.mymetastore ]
}

resource "databricks_metastore_assignment" "mymetastoreassignment" {
  workspace_id         = azurerm_databricks_workspace.myworkspace.workspace_id
  metastore_id         = databricks_metastore.mymetastore.id

data "azuread_application" "SCIM" {
  display_name = "Azure Databricks SCIM Provisioning Connector"
  
}

output "application_object_id" {
  value = data.azuread_application.SCIM.id
}

data "azuread_service_principal" "tf" {
  display_name = "Terraform Enterprise"
}

output "SPN_object_id" {
  value = data.azuread_service_principal.tf.id
}

resource "azuread_service_principal" "mytf" {
  application_id = data.azuread_service_principal.tf.application_id
  app_role_assignment_required = true
}

resource "azuread_group" "Uc-test" {
  display_name     = "Uc-test"
  security_enabled = true
}
   
    
    #Assign a user and group to an internal application
    resource "azuread_app_role_assignment" "SCIM" {
      app_role_id         = azuread_service_principal.mytf.app_role_ids["Admin.All"]
      principal_object_id = azuread_group.Uc-test.object_id
      resource_object_id  = data.azuread_service_principal.tf.object_id
    }


  default_catalog_name = "hive_metastore"
  depends_on = [ databricks_metastore.mymetastore, azurerm_resource_group.applicationrg ]
}

*/
